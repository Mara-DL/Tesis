"0",""
"0","library(dplyr) # libreria para poder renombrar "
"0","# las cabeceras de los dataframes"
"0",""
"0","#Parametros"
"0","set.seed(13) #semilla fija"
"0","u = 1759629 #surplus(capital inicial de salvamento)"
"0","#Es un estimado a partir de la media de las ganancias por semana, "
"0","#multiplicado por 10/3, "
"0","#siendo una proporci칩n para evitar la ruina"
"0","# u (sum(medias))*(10/3)"
"0","decimal_c = 0.29"
"0","c =decimal_c*u #prima de pago cada timepo t. c=0.5*u"
"0","lambda_Nt = 0.5"
"0","#lambda_Xi = 3"
"0","t_final = 14"
"0","# S(t) = \sum_{i=1}^{N(t)}X_i"
"0","#donde N(t)~ Poisson (lambda*t)"
"0","# X_i ~ exponencial (lambda_Xi)"
"0","#CL = REPRESENTA EL MODELO DE CRAMER LUNDBERG"
"0","#Simulaci칩n de trayectoria de CL_t, cuando t < t_final."
"0","trayectoria_CLt_post_pandemia <- function(u, c, lambda_Nt, t_final)"
"0","{"
"0","  tiempo <- c(0)"
"0","  Cramer_trayectoria <- c(u)"
"0","  while(tiempo[length(tiempo)] < t_final)"
"0","  {"
"0","    #tiempo_llegada <- rexp(1, rate = lambda_Nt)"
"0","    tiempo_llegada <- (1)"
"0","    Y_i <-  (rnorm(1, mean = 101919.050 , sd = 10877.075) + "
"0","              rnorm(1, mean =  39841.721 , sd= 7873.446)  +  "
"0","              rnorm(1, mean =   41751.747, sd = 5687.030) + "
"0","              rnorm(1, mean =   43243.143, sd = 10517.841)+ "
"0","              rnorm(1, mean = 43010.307  , sd = 7741.889) + "
"0","              rnorm(1, mean = 61191.300  , sd = 7202.989) + "
"0","              rnorm(1, mean =  85684.058 , sd = 8371.359)) "
"0","    tiempo <- c(tiempo, tiempo[length(tiempo)] "
"0","                + tiempo_llegada,tiempo[length(tiempo)] "
"0","                + tiempo_llegada ) "
"0","    Cramer_trayectoria <- c(Cramer_trayectoria,"
"0","                      Cramer_trayectoria[length(Cramer_trayectoria)]- "
"0","                        c*tiempo_llegada, "
"0","                      Cramer_trayectoria[length(Cramer_trayectoria)]- "
"0","                       c*tiempo_llegada +  Y_i )"
"0","    if(Cramer_trayectoria[length(Cramer_trayectoria)] < 0)"
"0","    {"
"0","      ruina = 1"
"0","    }"
"0","    else"
"0","    {"
"0","      ruina = 0"
"0","    }"
"0","  }"
"0","  df_post_pandemia<- data.frame(tiempo, Cramer_trayectoria)"
"0","  df_trayectoria_post_pandemia <- data.frame(df_post_pandemia%>%"
"0","                                  rename(Tiempo = tiempo, "
"0","                                         Ct = Cramer_trayectoria))"
"0","  return(df_trayectoria_post_pandemia$Ct[length"
"0","                                (df_trayectoria_post_pandemia$Ct)])"
"0","}"
"0",""
"0","# La funci칩n generador_mediana nos calcula la mediana de "
"0","# las ganancias finales de 100 trayectorias, "
"0","# fijando el u= surplus y el c"
"0","generador_mediana_post_pandemia<- function(ui,cj)"
"0","  {"
"0","  ganancia_final_replicas_post_pandemia <- replicate(100,"
"0","           trayectoria_CLt_post_pandemia(u, c,lambda_Nt, t_final))"
"0","    return( median(ganancia_final_replicas_post_pandemia))"
"0","  }"
"0","# Se crea la rejilla donde se hace el analisis de sensibilidad"
"0","# para diferentes valores de u y c"
"0","grid_u_post_pandemia <- seq(from = (u-100000*4), "
"0","                            to = (u+100000*4), "
"0","                            by = 100000)"
"0","grid_c_post_pandemia <- seq(from = (decimal_c-0.01*4), "
"0","                            to = (decimal_c+0.01*4), "
"0","                            by = 0.01)"
"0","u_t <- grid_u_post_pandemia"
"0","matriz_mediana_post_pandemia <- matrix(rep(0, "
"0","      length(grid_u_post_pandemia)*length(grid_c_post_pandemia)),"
"0","      nrow= length(grid_u_post_pandemia), "
"0","      ncol= length(grid_c_post_pandemia))"
"0",""
"0","G_t <- matriz_mediana_post_pandemia"
"0",""
"0","for (i in 1:length(u_t)) "
"0","{"
"0","  for (j in 1:length(grid_c_post_pandemia)) "
"0","  {"
"0","    G_t[i,j] <- generador_mediana_post_pandemia(u_t[i], "
"0","                                  grid_c_post_pandemia[j]*u_t[i])"
"0","  }"
"0","} "
"0","# matriz_mediana_post_pandemia  "
"0","# Grafica del 치nalisis de sensibilidad"
"0","library(plotly)"
"0","library(ggplot2)"
"0","c_t <- u_t*grid_c_post_pandemia"
"0","fig2 <- plot_ly("
"0","  type = 'surface',"
"0","  contours = list(x = list(show = TRUE, start = u_t[1], "
"0","                  end = grid_u_post_pandemia[length(u_t)], "
"0","                  size =100000 , color = 'black'),"
"0","                  z = list(show = TRUE, start = G_t[1], "
"0","                  end = G_t[length(G_t)], "
"0","                  size = 0.01*100000)),"
"0","  x = ~u_t,"
"0","  y = ~c_t,"
"0","  z = ~G_t)"
"0","fig2 <- fig2 %>% layout("
"0","    scene = list("
"0","    xaxis = list(nticks = 20),"
"0","    zaxis = list(nticks = 4),"
"0","    camera = list(eye = list(x = 0, "
"0","                             y = -1, "
"0","                             z = 1)),"
"0","    aspectratio = list(x = .9, y = .8, z = 0.2)))"
"0",""
"0","fig2"
